{"ast":null,"code":"import _classCallCheck from \"/Users/zach9040/Documents/reactdecal/spotifyClone/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zach9040/Documents/reactdecal/spotifyClone/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zach9040/Documents/reactdecal/spotifyClone/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zach9040/Documents/reactdecal/spotifyClone/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zach9040/Documents/reactdecal/spotifyClone/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/zach9040/Documents/reactdecal/spotifyClone/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/zach9040/Documents/reactdecal/spotifyClone/src/App.jsx\";\nimport React from 'react';\nimport Song from './components/Song';\nimport songData from './components/Data';\nimport Current from \"./components/CurrentlyPlaying\";\nimport Next from \"./components/NextButton\";\nimport Previous from \"./components/PreviousButton\";\nimport PausePlayButton from \"./components/PausePlayButton\";\nimport RecentlyPlayed from \"./components/RecentlyPlayed\";\nimport './styles/App.css'; //get authorization\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.pauseSong = _this.pauseSong.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getRandomSong = _this.getRandomSong.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.playPreviousSong = _this.playPreviousSong.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.playSong = _this.playSong.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.clearRecent = _this.clearRecent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addFavorite = _this.addFavorite.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      nowPlaying: {\n        name: 'Nothing'\n      },\n      prevSong: {},\n      isPlaying: false,\n      songs: songData.songs,\n      recent: [],\n      token: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"clearRecent\",\n    value: function clearRecent() {\n      var clear = [];\n      this.setState({\n        recent: clear\n      });\n    }\n  }, {\n    key: \"playPreviousSong\",\n    value: function playPreviousSong() {\n      var previous = this.state.prevSong;\n      this.setState({\n        nowPlaying: previous,\n        prevSong: {}\n      });\n    }\n  }, {\n    key: \"getRandomSong\",\n    value: function getRandomSong() {\n      var nextSong = songData.songs[Math.floor(Math.random() * songData.songs.length)];\n      this.setState({\n        nowPlaying: nextSong,\n        prevSong: this.state.nowPlaying,\n        isPlaying: true,\n        recent: this.state.recent.concat([this.state.nowPlaying])\n      });\n    }\n  }, {\n    key: \"playSong\",\n    value: function playSong(name, art, spotifyLink) {\n      var newSong = {\n        name: name,\n        albumArt: art,\n        spotifyLink: spotifyLink\n      };\n      var previous = this.state.nowPlaying;\n      this.setState({\n        nowPlaying: newSong,\n        prevSong: previous,\n        recent: this.state.recent.concat([previous])\n      });\n    }\n  }, {\n    key: \"pauseSong\",\n    value: function pauseSong() {\n      this.setState({\n        isPlaying: !this.state.isPlaying\n      });\n    }\n  }, {\n    key: \"addFavorite\",\n    value: function addFavorite() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"flex-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \" BETTER THAN SPOTIFY \"), React.createElement(\"div\", {\n        className: \"songDisplay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, this.state.songs.map(function (song) {\n        return React.createElement(Song, {\n          title: song.name,\n          link: song.spotifyLink,\n          image: song.albumArt,\n          onClick: _this2.playSong,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n      })), React.createElement(\"div\", {\n        className: \"current\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Current, {\n        title: this.state.nowPlaying.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttonDisplay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Previous, {\n        isPlaying: this.state.isPlaying,\n        onClick: this.playPreviousSong,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(PausePlayButton, {\n        isPlaying: this.state.isPlaying,\n        onClick: this.pauseSong,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(Next, {\n        isPlaying: this.state.isPlaying,\n        onClick: this.getRandomSong,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"recent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(RecentlyPlayed, {\n        songList: this.state.recent,\n        onClick: this.clearRecent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/zach9040/Documents/reactdecal/spotifyClone/src/App.jsx"],"names":["React","Song","songData","Current","Next","Previous","PausePlayButton","RecentlyPlayed","App","props","pauseSong","bind","getRandomSong","playPreviousSong","playSong","clearRecent","addFavorite","state","nowPlaying","name","prevSong","isPlaying","songs","recent","token","clear","setState","previous","nextSong","Math","floor","random","length","concat","art","spotifyLink","newSong","albumArt","map","song","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Song from './components/Song';\nimport songData from './components/Data';\nimport Current from \"./components/CurrentlyPlaying\";\nimport Next from \"./components/NextButton\";\nimport Previous from \"./components/PreviousButton\";\nimport PausePlayButton from \"./components/PausePlayButton\";\nimport RecentlyPlayed from \"./components/RecentlyPlayed\";\nimport './styles/App.css';\n\n//get authorization\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.pauseSong = this.pauseSong.bind(this);\n    this.getRandomSong = this.getRandomSong.bind(this);\n    this.playPreviousSong = this.playPreviousSong.bind(this);\n    this.playSong = this.playSong.bind(this);\n    this.clearRecent = this.clearRecent.bind(this);\n    this.addFavorite = this.addFavorite.bind(this);\n    this.state = {\n      nowPlaying: {name : 'Nothing'},\n      prevSong: {},\n      isPlaying: false,\n      songs : songData.songs,\n      recent : [],\n      token : ''\n    };\n  }\n\n  clearRecent() {\n    let clear = [];\n    this.setState({recent : clear});\n  }\n\n  playPreviousSong() {\n    let previous = this.state.prevSong;\n    this.setState({nowPlaying : previous, prevSong : {}});\n  }\n\n  getRandomSong() {\n    const nextSong = songData.songs[Math.floor(Math.random()* songData.songs.length)];\n    this.setState({nowPlaying : nextSong, prevSong : this.state.nowPlaying,\n        isPlaying : true, recent : this.state.recent.concat([this.state.nowPlaying])});\n  }\n\n  playSong(name, art, spotifyLink) {\n    let newSong = {name : name, albumArt : art, spotifyLink : spotifyLink};\n    let previous = this.state.nowPlaying;\n    this.setState({nowPlaying : newSong, prevSong : previous\n      , recent : this.state.recent.concat([previous])});\n  }\n\n  pauseSong() {\n    this.setState({isPlaying : !this.state.isPlaying})\n  }\n\n  addFavorite() {\n\n  }\n\n\n  render() {\n    return (\n      <div className=\"flex-wrapper\">\n        <h2> BETTER THAN SPOTIFY </h2>\n        <div className=\"songDisplay\">\n          {this.state.songs.map(song => <Song title={song.name} link={song.spotifyLink}\n                                              image={song.albumArt} onClick={this.playSong}/>)}\n        </div>\n        <div className=\"current\">\n          <Current title={this.state.nowPlaying.name} />\n          <div className=\"buttonDisplay\">\n            <Previous isPlaying={this.state.isPlaying} onClick={this.playPreviousSong}/>\n            <PausePlayButton isPlaying={this.state.isPlaying} onClick={this.pauseSong}/>\n            <Next isPlaying={this.state.isPlaying} onClick={this.getRandomSong}/>\n          </div>\n          <div className=\"recent\">\n            <RecentlyPlayed songList={this.state.recent} onClick={this.clearRecent} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}