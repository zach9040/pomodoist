{"ast":null,"code":"import _classCallCheck from \"/Users/zach9040/Documents/reactdecal/pomodoist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zach9040/Documents/reactdecal/pomodoist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zach9040/Documents/reactdecal/pomodoist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zach9040/Documents/reactdecal/pomodoist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zach9040/Documents/reactdecal/pomodoist/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/zach9040/Documents/reactdecal/pomodoist/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/zach9040/Documents/reactdecal/pomodoist/src/components/TodoInput.jsx\";\nimport React from 'react';\nimport '../styles/todoInput.css';\nimport { ReactComponent as Plus } from \"@svgr/webpack?-svgo,+ref!../icons/plus.svg\";\n\nvar TodoInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TodoInput, _React$Component);\n\n  function TodoInput(props) {\n    var _this;\n\n    _classCallCheck(this, TodoInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoInput).call(this, props));\n    _this.state = {\n      newTodoItemValue: '' // initialize to empty string\n\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TodoInput, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var newTodoItemValue = e.target.value;\n      this.setState({\n        newTodoItemValue: newTodoItemValue\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      var addItem = this.props.addItem;\n      var newTodoItemValue = this.state.newTodoItemValue;\n\n      if (newTodoItemValue !== '') {\n        // form value is not empty\n        addItem(newTodoItemValue);\n        this.setState({\n          newTodoItemValue: ''\n        }); // clear back to empty string\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var newTodoItemValue = this.state.newTodoItemValue;\n      return React.createElement(\"div\", {\n        className: \"todo-input-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Add Task...\",\n        value: newTodoItemValue,\n        onChange: this.handleChange,\n        className: \"todo-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"todo-input-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Plus, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return TodoInput;\n}(React.Component);\n\nexport { TodoInput as default };","map":{"version":3,"sources":["/Users/zach9040/Documents/reactdecal/pomodoist/src/components/TodoInput.jsx"],"names":["React","TodoInput","props","state","newTodoItemValue","handleChange","bind","handleSubmit","e","target","value","setState","preventDefault","addItem","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;;;IAGqBC,S;;;;;AACnB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,gBAAgB,EAAE,EADP,CACW;;AADX,KAAb;AAIA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,uDAApB;AARiB;AASlB;;;;iCAEYE,C,EAAG;AACd,UAAMJ,gBAAgB,GAAGI,CAAC,CAACC,MAAF,CAASC,KAAlC;AACA,WAAKC,QAAL,CAAc;AAAEP,QAAAA,gBAAgB,EAAhBA;AAAF,OAAd;AACD;;;iCAEYI,C,EAAG;AACdA,MAAAA,CAAC,CAACI,cAAF;AADc,UAENC,OAFM,GAEM,KAAKX,KAFX,CAENW,OAFM;AAAA,UAGNT,gBAHM,GAGe,KAAKD,KAHpB,CAGNC,gBAHM;;AAKd,UAAIA,gBAAgB,KAAK,EAAzB,EAA6B;AAAE;AAC7BS,QAAAA,OAAO,CAACT,gBAAD,CAAP;AACA,aAAKO,QAAL,CAAc;AAAEP,UAAAA,gBAAgB,EAAE;AAApB,SAAd,EAF2B,CAEc;AAC1C;AACF;;;6BAEQ;AAAA,UACCA,gBADD,GACsB,KAAKD,KAD3B,CACCC,gBADD;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,QAAQ,EAAE,KAAKG,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,WAAW,EAAC,aADd;AAEE,QAAA,KAAK,EAAEH,gBAFT;AAGE,QAAA,QAAQ,EAAE,KAAKC,YAHjB;AAIE,QAAA,SAAS,EAAC,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAPF,CADF,CADF;AAeD;;;;EA7CoCL,KAAK,CAACc,S;;SAAxBb,S","sourcesContent":["import React from 'react';\nimport '../styles/todoInput.css';\nimport { ReactComponent as Plus } from '../icons/plus.svg';\n\nexport default class TodoInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newTodoItemValue: '', // initialize to empty string\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const newTodoItemValue = e.target.value;\n    this.setState({ newTodoItemValue });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { addItem } = this.props;\n    const { newTodoItemValue } = this.state;\n\n    if (newTodoItemValue !== '') { // form value is not empty\n      addItem(newTodoItemValue);\n      this.setState({ newTodoItemValue: '' }); // clear back to empty string\n    }\n  }\n\n  render() {\n    const { newTodoItemValue } = this.state;\n    return (\n      <div className=\"todo-input-container\">\n        <form onSubmit={this.handleSubmit}>\n          <input\n            placeholder=\"Add Task...\"\n            value={newTodoItemValue}\n            onChange={this.handleChange}\n            className=\"todo-input\"\n          />\n          <button type=\"submit\" className=\"todo-input-button\">\n            <Plus />\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}